{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Task Fast\\\\client-server\\\\client\\\\src\\\\contexts\\\\themeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  theme: 'light',\n  toggle: () => {}\n});\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n\n  // Load initial theme from storage or OS\n  useEffect(() => {\n    const stored = localStorage.getItem('theme');\n    if (stored === 'dark' || stored === 'light') {\n      setTheme(stored);\n    } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      setTheme('dark');\n    }\n  }, []);\n\n  // Apply class to html element and persist\n  useEffect(() => {\n    const root = document.documentElement;\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const value = useMemo(() => ({\n    theme,\n    toggle: () => setTheme(t => t === 'dark' ? 'light' : 'dark'),\n    setTheme\n  }), [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"JICqhCxYDE6V7Vb2H7alXeUO8A4=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","jsxDEV","_jsxDEV","ThemeContext","theme","toggle","ThemeProvider","children","_s","setTheme","stored","localStorage","getItem","window","matchMedia","matches","root","document","documentElement","classList","add","remove","setItem","value","t","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Task Fast/client-server/client/src/contexts/themeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\r\n\r\nconst ThemeContext = createContext({ theme: 'light', toggle: () => {} });\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  // Load initial theme from storage or OS\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('theme');\r\n    if (stored === 'dark' || stored === 'light') {\r\n      setTheme(stored);\r\n    } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n      setTheme('dark');\r\n    }\r\n  }, []);\r\n\r\n  // Apply class to html element and persist\r\n  useEffect(() => {\r\n    const root = document.documentElement;\r\n    if (theme === 'dark') {\r\n      root.classList.add('dark');\r\n    } else {\r\n      root.classList.remove('dark');\r\n    }\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const value = useMemo(() => ({\r\n    theme,\r\n    toggle: () => setTheme((t) => (t === 'dark' ? 'light' : 'dark')),\r\n    setTheme\r\n  }), [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,YAAY,gBAAGP,aAAa,CAAC;EAAEQ,KAAK,EAAE,OAAO;EAAEC,MAAM,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAExE,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;;EAE3C;EACAF,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,IAAIF,MAAM,KAAK,MAAM,IAAIA,MAAM,KAAK,OAAO,EAAE;MAC3CD,QAAQ,CAACC,MAAM,CAAC;IAClB,CAAC,MAAM,IAAIG,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,EAAE;MACzFN,QAAQ,CAAC,MAAM,CAAC;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAX,SAAS,CAAC,MAAM;IACd,MAAMkB,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrC,IAAId,KAAK,KAAK,MAAM,EAAE;MACpBY,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IAC/B;IACAV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAElB,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMmB,KAAK,GAAGxB,OAAO,CAAC,OAAO;IAC3BK,KAAK;IACLC,MAAM,EAAEA,CAAA,KAAMI,QAAQ,CAAEe,CAAC,IAAMA,CAAC,KAAK,MAAM,GAAG,OAAO,GAAG,MAAO,CAAC;IAChEf;EACF,CAAC,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEZ,oBACEF,OAAA,CAACC,YAAY,CAACsB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAE3E,CAAC;AAACrB,EAAA,CAjCWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAmC1B,OAAO,MAAMyB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACM,YAAY,CAAC;AAAA;AAAC6B,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}