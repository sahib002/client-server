{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Task Fast\\\\client-server\\\\client\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport './Calendar.css'; // Custom styles to fix button issues\nimport { useAuth } from '../contexts/authContext';\nimport axios from 'axios';\nimport TaskModal from './AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n_c = DragAndDropCalendar;\nconst TaskCalendar = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n\n  // Add controlled state for calendar navigation\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentView, setCurrentView] = useState('month');\n\n  // Fetch tasks and convert them to calendar events\n  const fetchTasksForCalendar = async () => {\n    try {\n      if (!(currentUser !== null && currentUser !== void 0 && currentUser.email)) {\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(`http://localhost:5000/api/tasks?userEmail=${currentUser.email}`);\n      const tasks = response.data.tasks || response.data;\n\n      // Convert tasks to calendar events\n      const calendarEvents = tasks.map(task => {\n        console.log('Processing task:', task.title, {\n          startTime: task.startTime,\n          endTime: task.endTime,\n          dueDate: task.dueDate\n        });\n        let startDate, endDate;\n        let isAllDay = true;\n\n        // If task has start and end times, use them\n        if (task.startTime && task.endTime) {\n          startDate = new Date(task.startTime);\n          endDate = new Date(task.endTime);\n          isAllDay = false;\n          console.log('‚úÖ Task has both start and end times:', startDate, endDate);\n        }\n        // If task has only start time, make it 1 hour duration\n        else if (task.startTime) {\n          startDate = new Date(task.startTime);\n          endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour\n          isAllDay = false;\n          console.log('‚úÖ Task has only start time:', startDate, endDate);\n        }\n        // If task has only due date, make it all-day\n        else if (task.dueDate) {\n          startDate = new Date(task.dueDate);\n          endDate = new Date(task.dueDate);\n          isAllDay = true;\n          console.log('üìÖ Task has only due date (all-day):', startDate);\n        }\n        // Default to today if no dates\n        else {\n          startDate = new Date();\n          endDate = new Date();\n          isAllDay = true;\n          console.log('‚ö†Ô∏è Task has no dates, using today');\n        }\n        return {\n          id: task._id,\n          title: task.title || task.task,\n          start: startDate,\n          end: endDate,\n          resource: task,\n          completed: task.completed,\n          allDay: isAllDay\n        };\n      });\n      setEvents(calendarEvents);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching tasks for calendar:', error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasksForCalendar();\n  }, [currentUser]);\n\n  // Custom event style getter\n  const eventStyleGetter = event => {\n    let backgroundColor = '#3174ad';\n    if (event.completed) {\n      backgroundColor = '#28a745'; // Green for completed tasks\n    } else if (event.resource.priority === 'high') {\n      backgroundColor = '#dc3545'; // Red for high priority\n    } else if (event.resource.priority === 'medium') {\n      backgroundColor = '#ffc107'; // Yellow for medium priority\n    }\n    return {\n      style: {\n        backgroundColor,\n        borderRadius: '5px',\n        opacity: 0.8,\n        color: 'white',\n        border: '0px',\n        display: 'block'\n      }\n    };\n  };\n\n  // Handle event selection\n  const handleSelectEvent = event => {\n    setTaskToEdit(event.resource);\n    setIsModalOpen(true);\n  };\n\n  // Handle slot selection (for creating new tasks)\n  const handleSelectSlot = ({\n    start,\n    end\n  }) => {\n    const startMoment = moment(start);\n    const endMoment = moment(end);\n\n    // Check if this is a time slot selection (not all-day)\n    const isTimeSlot = startMoment.format('HH:mm') !== '00:00' || endMoment.format('HH:mm') !== '00:00';\n    setSelectedDate(startMoment.format('YYYY-MM-DD'));\n\n    // If it's a time slot, also set the time\n    const taskData = {\n      dueDate: startMoment.format('YYYY-MM-DD')\n    };\n    if (isTimeSlot) {\n      taskData.startTime = startMoment.format('HH:mm');\n      taskData.endTime = endMoment.format('HH:mm');\n    }\n    setTaskToEdit(taskData);\n    setIsModalOpen(true);\n  };\n\n  // Handle task save from modal\n  const handleTaskSave = () => {\n    fetchTasksForCalendar(); // Refresh calendar data\n    setIsModalOpen(false);\n    setTaskToEdit(null);\n    setSelectedDate(null);\n  };\n\n  // Handle drag and drop events\n  const handleEventDrop = async ({\n    event,\n    start,\n    end\n  }) => {\n    try {\n      console.log('Dragging task:', event.title, 'to new date/time:', start, 'to', end);\n      const updatedTask = {\n        title: event.resource.title,\n        description: event.resource.description,\n        priority: event.resource.priority,\n        completed: event.resource.completed,\n        dueDate: moment(start).format('YYYY-MM-DD'),\n        userEmail: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email\n      };\n\n      // If the original task had times or this is a timed event, update the times\n      if (event.resource.startTime || event.resource.endTime || !event.allDay) {\n        updatedTask.startTime = start;\n        updatedTask.endTime = end;\n      }\n      const response = await axios.put(`http://localhost:5000/api/tasks/${event.id}`, updatedTask);\n      if (response.data.success || response.data.task) {\n        // Update the event in local state\n        setEvents(prevEvents => prevEvents.map(evt => evt.id === event.id ? {\n          ...evt,\n          start: new Date(start),\n          end: new Date(end),\n          resource: {\n            ...evt.resource,\n            dueDate: start,\n            startTime: start,\n            endTime: end\n          }\n        } : evt));\n        console.log('‚úÖ Task date/time updated successfully');\n\n        // Show success feedback\n        const timeInfo = event.allDay ? moment(start).format('MMM DD, YYYY') : `${moment(start).format('MMM DD, YYYY h:mm A')} - ${moment(end).format('h:mm A')}`;\n        alert(`Task \"${event.title}\" moved to ${timeInfo}`);\n      }\n    } catch (error) {\n      console.error('‚ùå Error updating task date/time:', error);\n      alert('Failed to update task date/time. Please try again.');\n      // Refresh calendar to revert changes\n      fetchTasksForCalendar();\n    }\n  };\n\n  // Handle event resize (if user drags to extend the duration)\n  const handleEventResize = async ({\n    event,\n    start,\n    end\n  }) => {\n    // For tasks, we'll just update the due date to the end date\n    await handleEventDrop({\n      event,\n      start: end,\n      end\n    });\n  };\n\n  // Handle navigation events\n  const handleNavigate = useCallback(newDate => {\n    console.log('üìÖ Navigating to date:', newDate);\n    setCurrentDate(newDate);\n  }, []);\n  const handleViewChange = useCallback(newView => {\n    console.log('üëÅÔ∏è Changing view to:', newView);\n    setCurrentView(newView);\n  }, []);\n\n  // Handle toolbar button clicks\n  const handleToday = useCallback(() => {\n    console.log('üè† Going to today');\n    setCurrentDate(new Date());\n  }, []);\n  const handleNext = useCallback(() => {\n    console.log('‚è≠Ô∏è Going to next period');\n    const nextDate = moment(currentDate).add(1, currentView === 'month' ? 'month' : currentView === 'week' ? 'week' : 'day').toDate();\n    setCurrentDate(nextDate);\n  }, [currentDate, currentView]);\n  const handlePrevious = useCallback(() => {\n    console.log('‚èÆÔ∏è Going to previous period');\n    const prevDate = moment(currentDate).subtract(1, currentView === 'month' ? 'month' : currentView === 'week' ? 'week' : 'day').toDate();\n    setCurrentDate(prevDate);\n  }, [currentDate, currentView]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: \"Loading calendar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"Task Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-600 mb-4\",\n      children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tip:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 12\n      }, this), \" Drag tasks to different dates to update their due dates, or click to edit them.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '600px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DragAndDropCalendar, {\n        localizer: localizer,\n        events: events,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: '100%'\n        },\n        eventPropGetter: eventStyleGetter,\n        onSelectEvent: handleSelectEvent,\n        onSelectSlot: handleSelectSlot,\n        onEventDrop: handleEventDrop,\n        onEventResize: handleEventResize\n\n        // Controlled navigation props\n        ,\n        date: currentDate,\n        view: currentView,\n        onNavigate: handleNavigate,\n        onView: handleViewChange\n\n        // Custom toolbar to ensure buttons work\n        ,\n        components: {\n          toolbar: ({\n            label,\n            onNavigate,\n            onView,\n            view,\n            views\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rbc-toolbar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rbc-btn-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => onNavigate('PREV'),\n                onMouseDown: e => e.preventDefault(),\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => onNavigate('TODAY'),\n                onMouseDown: e => e.preventDefault(),\n                children: \"Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => onNavigate('NEXT'),\n                onMouseDown: e => e.preventDefault(),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rbc-toolbar-label\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rbc-btn-group\",\n              children: views.map(viewName => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: view === viewName ? 'rbc-active' : '',\n                onClick: () => onView(viewName),\n                onMouseDown: e => e.preventDefault(),\n                children: viewName.charAt(0).toUpperCase() + viewName.slice(1)\n              }, viewName, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        },\n        selectable: true,\n        resizable: true,\n        popup: true,\n        dragFromOutsideItem: () => ({}),\n        views: ['month', 'week', 'day', 'agenda'],\n        step: 60,\n        showMultiDayTimes: true,\n        messages: {\n          next: 'Next',\n          previous: 'Previous',\n          today: 'Today',\n          month: 'Month',\n          week: 'Week',\n          day: 'Day',\n          agenda: 'Agenda',\n          date: 'Date',\n          time: 'Time',\n          event: 'Task',\n          noEventsInRange: 'No tasks in this date range.',\n          showMore: total => `+${total} more`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex flex-wrap gap-4 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-green-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-red-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"High Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-yellow-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Medium Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-blue-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Normal Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      isOpen: isModalOpen,\n      onClose: () => {\n        setIsModalOpen(false);\n        setTaskToEdit(null);\n        setSelectedDate(null);\n      },\n      taskToEdit: taskToEdit ? {\n        ...taskToEdit,\n        dueDate: selectedDate || taskToEdit.dueDate,\n        startTime: taskToEdit.startTime,\n        endTime: taskToEdit.endTime\n      } : {\n        dueDate: selectedDate\n      },\n      onSave: handleTaskSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCalendar, \"rM3bP/wsX8zyge9daIbqyrZtZF0=\", false, function () {\n  return [useAuth];\n});\n_c2 = TaskCalendar;\nexport default TaskCalendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"DragAndDropCalendar\");\n$RefreshReg$(_c2, \"TaskCalendar\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Calendar","momentLocalizer","withDragAndDrop","moment","useAuth","axios","TaskModal","jsxDEV","_jsxDEV","localizer","DragAndDropCalendar","_c","TaskCalendar","_s","currentUser","events","setEvents","loading","setLoading","isModalOpen","setIsModalOpen","selectedDate","setSelectedDate","taskToEdit","setTaskToEdit","currentDate","setCurrentDate","Date","currentView","setCurrentView","fetchTasksForCalendar","email","response","get","tasks","data","calendarEvents","map","task","console","log","title","startTime","endTime","dueDate","startDate","endDate","isAllDay","getTime","id","_id","start","end","resource","completed","allDay","error","eventStyleGetter","event","backgroundColor","priority","style","borderRadius","opacity","color","border","display","handleSelectEvent","handleSelectSlot","startMoment","endMoment","isTimeSlot","format","taskData","handleTaskSave","handleEventDrop","updatedTask","description","userEmail","put","success","prevEvents","evt","timeInfo","alert","handleEventResize","handleNavigate","newDate","handleViewChange","newView","handleToday","handleNext","nextDate","add","toDate","handlePrevious","prevDate","subtract","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","startAccessor","endAccessor","eventPropGetter","onSelectEvent","onSelectSlot","onEventDrop","onEventResize","date","view","onNavigate","onView","components","toolbar","label","views","type","onClick","onMouseDown","e","preventDefault","viewName","charAt","toUpperCase","slice","selectable","resizable","popup","dragFromOutsideItem","step","showMultiDayTimes","messages","next","previous","today","month","week","day","agenda","time","noEventsInRange","showMore","total","isOpen","onClose","onSave","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Task Fast/client-server/client/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\r\nimport './Calendar.css'; // Custom styles to fix button issues\r\nimport { useAuth } from '../contexts/authContext';\r\nimport axios from 'axios';\r\nimport TaskModal from './AddTask';\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\r\n\r\nconst TaskCalendar = () => {\r\n  const { currentUser } = useAuth();\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n  \r\n  // Add controlled state for calendar navigation\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [currentView, setCurrentView] = useState('month');\r\n\r\n  // Fetch tasks and convert them to calendar events\r\n  const fetchTasksForCalendar = async () => {\r\n    try {\r\n      if (!currentUser?.email) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get(`http://localhost:5000/api/tasks?userEmail=${currentUser.email}`);\r\n      const tasks = response.data.tasks || response.data;\r\n\r\n      // Convert tasks to calendar events\r\n      const calendarEvents = tasks.map(task => {\r\n        console.log('Processing task:', task.title, {\r\n          startTime: task.startTime,\r\n          endTime: task.endTime,\r\n          dueDate: task.dueDate\r\n        });\r\n        \r\n        let startDate, endDate;\r\n        let isAllDay = true;\r\n        \r\n        // If task has start and end times, use them\r\n        if (task.startTime && task.endTime) {\r\n          startDate = new Date(task.startTime);\r\n          endDate = new Date(task.endTime);\r\n          isAllDay = false;\r\n          console.log('‚úÖ Task has both start and end times:', startDate, endDate);\r\n        } \r\n        // If task has only start time, make it 1 hour duration\r\n        else if (task.startTime) {\r\n          startDate = new Date(task.startTime);\r\n          endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // Add 1 hour\r\n          isAllDay = false;\r\n          console.log('‚úÖ Task has only start time:', startDate, endDate);\r\n        }\r\n        // If task has only due date, make it all-day\r\n        else if (task.dueDate) {\r\n          startDate = new Date(task.dueDate);\r\n          endDate = new Date(task.dueDate);\r\n          isAllDay = true;\r\n          console.log('üìÖ Task has only due date (all-day):', startDate);\r\n        }\r\n        // Default to today if no dates\r\n        else {\r\n          startDate = new Date();\r\n          endDate = new Date();\r\n          isAllDay = true;\r\n          console.log('‚ö†Ô∏è Task has no dates, using today');\r\n        }\r\n\r\n        return {\r\n          id: task._id,\r\n          title: task.title || task.task,\r\n          start: startDate,\r\n          end: endDate,\r\n          resource: task,\r\n          completed: task.completed,\r\n          allDay: isAllDay\r\n        };\r\n      });\r\n\r\n      setEvents(calendarEvents);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks for calendar:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasksForCalendar();\r\n  }, [currentUser]);\r\n\r\n  // Custom event style getter\r\n  const eventStyleGetter = (event) => {\r\n    let backgroundColor = '#3174ad';\r\n    \r\n    if (event.completed) {\r\n      backgroundColor = '#28a745'; // Green for completed tasks\r\n    } else if (event.resource.priority === 'high') {\r\n      backgroundColor = '#dc3545'; // Red for high priority\r\n    } else if (event.resource.priority === 'medium') {\r\n      backgroundColor = '#ffc107'; // Yellow for medium priority\r\n    }\r\n\r\n    return {\r\n      style: {\r\n        backgroundColor,\r\n        borderRadius: '5px',\r\n        opacity: 0.8,\r\n        color: 'white',\r\n        border: '0px',\r\n        display: 'block'\r\n      }\r\n    };\r\n  };\r\n\r\n  // Handle event selection\r\n  const handleSelectEvent = (event) => {\r\n    setTaskToEdit(event.resource);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Handle slot selection (for creating new tasks)\r\n  const handleSelectSlot = ({ start, end }) => {\r\n    const startMoment = moment(start);\r\n    const endMoment = moment(end);\r\n    \r\n    // Check if this is a time slot selection (not all-day)\r\n    const isTimeSlot = startMoment.format('HH:mm') !== '00:00' || endMoment.format('HH:mm') !== '00:00';\r\n    \r\n    setSelectedDate(startMoment.format('YYYY-MM-DD'));\r\n    \r\n    // If it's a time slot, also set the time\r\n    const taskData = { dueDate: startMoment.format('YYYY-MM-DD') };\r\n    if (isTimeSlot) {\r\n      taskData.startTime = startMoment.format('HH:mm');\r\n      taskData.endTime = endMoment.format('HH:mm');\r\n    }\r\n    \r\n    setTaskToEdit(taskData);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Handle task save from modal\r\n  const handleTaskSave = () => {\r\n    fetchTasksForCalendar(); // Refresh calendar data\r\n    setIsModalOpen(false);\r\n    setTaskToEdit(null);\r\n    setSelectedDate(null);\r\n  };\r\n\r\n  // Handle drag and drop events\r\n  const handleEventDrop = async ({ event, start, end }) => {\r\n    try {\r\n      console.log('Dragging task:', event.title, 'to new date/time:', start, 'to', end);\r\n      \r\n      const updatedTask = {\r\n        title: event.resource.title,\r\n        description: event.resource.description,\r\n        priority: event.resource.priority,\r\n        completed: event.resource.completed,\r\n        dueDate: moment(start).format('YYYY-MM-DD'),\r\n        userEmail: currentUser?.email\r\n      };\r\n      \r\n      // If the original task had times or this is a timed event, update the times\r\n      if (event.resource.startTime || event.resource.endTime || !event.allDay) {\r\n        updatedTask.startTime = start;\r\n        updatedTask.endTime = end;\r\n      }\r\n\r\n      const response = await axios.put(`http://localhost:5000/api/tasks/${event.id}`, updatedTask);\r\n      \r\n      if (response.data.success || response.data.task) {\r\n        // Update the event in local state\r\n        setEvents(prevEvents => \r\n          prevEvents.map(evt => \r\n            evt.id === event.id \r\n              ? { \r\n                  ...evt, \r\n                  start: new Date(start), \r\n                  end: new Date(end), \r\n                  resource: { \r\n                    ...evt.resource, \r\n                    dueDate: start,\r\n                    startTime: start,\r\n                    endTime: end \r\n                  } \r\n                }\r\n              : evt\r\n          )\r\n        );\r\n        console.log('‚úÖ Task date/time updated successfully');\r\n        \r\n        // Show success feedback\r\n        const timeInfo = event.allDay ? \r\n          moment(start).format('MMM DD, YYYY') : \r\n          `${moment(start).format('MMM DD, YYYY h:mm A')} - ${moment(end).format('h:mm A')}`;\r\n        alert(`Task \"${event.title}\" moved to ${timeInfo}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Error updating task date/time:', error);\r\n      alert('Failed to update task date/time. Please try again.');\r\n      // Refresh calendar to revert changes\r\n      fetchTasksForCalendar();\r\n    }\r\n  };\r\n\r\n  // Handle event resize (if user drags to extend the duration)\r\n  const handleEventResize = async ({ event, start, end }) => {\r\n    // For tasks, we'll just update the due date to the end date\r\n    await handleEventDrop({ event, start: end, end });\r\n  };\r\n\r\n  // Handle navigation events\r\n  const handleNavigate = useCallback((newDate) => {\r\n    console.log('üìÖ Navigating to date:', newDate);\r\n    setCurrentDate(newDate);\r\n  }, []);\r\n\r\n  const handleViewChange = useCallback((newView) => {\r\n    console.log('üëÅÔ∏è Changing view to:', newView);\r\n    setCurrentView(newView);\r\n  }, []);\r\n\r\n  // Handle toolbar button clicks\r\n  const handleToday = useCallback(() => {\r\n    console.log('üè† Going to today');\r\n    setCurrentDate(new Date());\r\n  }, []);\r\n\r\n  const handleNext = useCallback(() => {\r\n    console.log('‚è≠Ô∏è Going to next period');\r\n    const nextDate = moment(currentDate).add(1, currentView === 'month' ? 'month' : currentView === 'week' ? 'week' : 'day').toDate();\r\n    setCurrentDate(nextDate);\r\n  }, [currentDate, currentView]);\r\n\r\n  const handlePrevious = useCallback(() => {\r\n    console.log('‚èÆÔ∏è Going to previous period');\r\n    const prevDate = moment(currentDate).subtract(1, currentView === 'month' ? 'month' : currentView === 'week' ? 'week' : 'day').toDate();\r\n    setCurrentDate(prevDate);\r\n  }, [currentDate, currentView]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"text-lg\">Loading calendar...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n      <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Task Calendar</h2>\r\n      <p className=\"text-sm text-gray-600 mb-4\">\r\n        üí° <strong>Tip:</strong> Drag tasks to different dates to update their due dates, or click to edit them.\r\n      </p>\r\n      <div style={{ height: '600px' }}>\r\n        <DragAndDropCalendar\r\n          localizer={localizer}\r\n          events={events}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          style={{ height: '100%' }}\r\n          eventPropGetter={eventStyleGetter}\r\n          onSelectEvent={handleSelectEvent}\r\n          onSelectSlot={handleSelectSlot}\r\n          onEventDrop={handleEventDrop}\r\n          onEventResize={handleEventResize}\r\n          \r\n          // Controlled navigation props\r\n          date={currentDate}\r\n          view={currentView}\r\n          onNavigate={handleNavigate}\r\n          onView={handleViewChange}\r\n          \r\n          // Custom toolbar to ensure buttons work\r\n          components={{\r\n            toolbar: ({ label, onNavigate, onView, view, views }) => (\r\n              <div className=\"rbc-toolbar\">\r\n                <div className=\"rbc-btn-group\">\r\n                  <button \r\n                    type=\"button\"\r\n                    onClick={() => onNavigate('PREV')}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                  <button \r\n                    type=\"button\"\r\n                    onClick={() => onNavigate('TODAY')}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                  >\r\n                    Today\r\n                  </button>\r\n                  <button \r\n                    type=\"button\"\r\n                    onClick={() => onNavigate('NEXT')}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                \r\n                <span className=\"rbc-toolbar-label\">{label}</span>\r\n                \r\n                <div className=\"rbc-btn-group\">\r\n                  {views.map(viewName => (\r\n                    <button\r\n                      key={viewName}\r\n                      type=\"button\"\r\n                      className={view === viewName ? 'rbc-active' : ''}\r\n                      onClick={() => onView(viewName)}\r\n                      onMouseDown={(e) => e.preventDefault()}\r\n                    >\r\n                      {viewName.charAt(0).toUpperCase() + viewName.slice(1)}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )\r\n          }}\r\n          \r\n          selectable\r\n          resizable\r\n          popup\r\n          dragFromOutsideItem={() => ({})}\r\n          views={['month', 'week', 'day', 'agenda']}\r\n          step={60}\r\n          showMultiDayTimes\r\n          messages={{\r\n            next: 'Next',\r\n            previous: 'Previous',\r\n            today: 'Today',\r\n            month: 'Month',\r\n            week: 'Week',\r\n            day: 'Day',\r\n            agenda: 'Agenda',\r\n            date: 'Date',\r\n            time: 'Time',\r\n            event: 'Task',\r\n            noEventsInRange: 'No tasks in this date range.',\r\n            showMore: total => `+${total} more`\r\n          }}\r\n        />\r\n      </div>\r\n      \r\n      {/* Legend */}\r\n      <div className=\"mt-4 flex flex-wrap gap-4 text-sm\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-4 h-4 bg-green-500 rounded\"></div>\r\n          <span>Completed Tasks</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-4 h-4 bg-red-500 rounded\"></div>\r\n          <span>High Priority</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-4 h-4 bg-yellow-500 rounded\"></div>\r\n          <span>Medium Priority</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-4 h-4 bg-blue-500 rounded\"></div>\r\n          <span>Normal Priority</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Task Modal */}\r\n      <TaskModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => {\r\n          setIsModalOpen(false);\r\n          setTaskToEdit(null);\r\n          setSelectedDate(null);\r\n        }}\r\n        taskToEdit={taskToEdit ? { \r\n          ...taskToEdit, \r\n          dueDate: selectedDate || taskToEdit.dueDate,\r\n          startTime: taskToEdit.startTime,\r\n          endTime: taskToEdit.endTime\r\n        } : { \r\n          dueDate: selectedDate \r\n        }}\r\n        onSave={handleTaskSave}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}